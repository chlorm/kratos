#!/usr/bin/env bash

usage_nix () {
    eval "printf \"\n\${clC}Version:\${clG} ${VERSION}
\${clC}Nix is a purely functional package manager.

Usage: \${clD}nix \${clU}\${clP}UTILITY\$clD [\${clU}\${clP}OPTIONS\$clD]\$clD
    \${clG}build\${clD}           - build a Nix expression\$clD
    \${clG}channel\${clD}         - manage Nix channels\$clD
    \${clG}collect-garbage\${clD} - delete unreachable store paths\$clD
    \${clG}copy-closure\${clD}    - copy a closure to or from a remote machine via SSH\$clD
    \${clG}daemon\${clD}          - Nix multi-user support daemon\$clD
    \${clG}env\${clD}             - manipulate or query Nix user environment\$clD
    \${clG}hash\${clD}            - compute the cryptographic hash of a path\$clD
    \${clG}install-package\${clD} - install a Nix Package file\$clD
    \${clG}instantiate\${clD}     - instaltiate store derivations from Nix expressions\$clD
    \${clG}prefetch-url\${clD}    - copy a file from a URL into the store and print its hash\$clD
    \${clG}pull\${clD}            - pull substitutes from a network cache\$clD
    \${clG}push\${clD}            - generate a binary cache\$clD
    \${clG}shell\${clD}           - start an interactive shell based on a Nix expression\$clD
    \${clG}store\${clD}           - manipulate or query the Nix store\$clD
    \$clG-h|--help\${clD}       - print this message
    \$clG-v|--version\${clD}    - print version\n\n\""
}

usage_nix_build () {
  echo "help"
}