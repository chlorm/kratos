#!/usr/bin/env sh
##       ________   ___       ___
##      /  _____/  /  /      /  /
##     /  /       /  /      /  /
##    /  /       /  /____  /  / _______  _______  ____  ____
##   /  /       /  ___  / /  / /  __  / /  ____/ /    \/    \
##  /  /_____  /  /  / / /  / /  /_/ / /  /     /  /\    /\  \
## /________/ /__/  /_/ /__/ /______/ /__/     /__/  \__/  \__\ TM
##
## Title: Add Artist
## Author: Cody Opel
## E-mail: codyopel(at)gmail.com
## Copyright (c) 2014 All Rights Reserved, http://www.chlorm.net
## License: The MIT License - http://opensource.org/licenses/MIT
## Comments:
##    Assumed Directory & File Structure:
##      ~/.bin/addartist
##    Legend:
##      () - option
##      [] - description
##      ## - comments [not to be uncommented]
##      # -- commented variables
##
## Adds all albums by an artist to local music library and convert lossless to lossy
##

# Configuration Options
remoteUser="cwopel"
remoteAddress="192.168.1.5"
remotePort="22"
remoteMusicDirectory="/home/cwopel/Music" # Should be an absolute path
localMusicDirectory="$HOME/Music/"
# Pass input to variable to work around bash errors
inputArtist="$@"

if [ -z "${inputArtist}" ]; then
  echo "ERROR: no input provided"
  exit 1
fi

# Sanitize input to prevent spaces from causing errors
artistAddPath="$remoteMusicDirectory/\"${@}\""

# Download artist directory
scp -r -P "${remotePort}" "${remoteUser}"@"${remoteAddress}":"${artistAddPath}" "$localMusicDirectory"

# Check for specified formats and convert to ogg
find $HOME/Music/"${inputArtist}" -depth -name '*' | \
while read curWorkFile; do
  curWorkFileExt=${curWorkFile##*.}
  case $curWorkFileExt in
    ape|flac|mp3|m4a|wav|wma)
      # Path to current file
      curWorkDir=$(dirname "$curWorkFile")
      # Filename w/ ext
      fileName=$(basename "$curWorkFile")
      # Filename w/o ext
      fileName=$(echo "$fileName" | sed -r 's/\.[[:alnum:]]+$//')
      ffmpeg -y -i "$curWorkFile" -c:a libvorbis -qscale:a 5 "$curWorkDir/$fileName.ogg" & \
      ffmpegPid=$!
      # Don't delete before encoding completes
      wait "$ffmpegPid"
      rm -f "$curWorkFile"
      ;;
    *)
      echo "Skipping: ${curWorkFile}"
      ;;
  esac
done