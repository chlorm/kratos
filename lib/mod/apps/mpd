#!/usr/bin/env sh

app_mpd_installed () {

  path_hasbin "mpd" || return 1

  return 0

}

app_mpd_dirs () {

  dir_exist "$XDG_CONFIG_HOME/mpd/playlists" || return 1

  return 0

}

app_mpd_dotfiles () {

  [ -f "$XDG_CONFIG_HOME/mpd/mpd.conf" ] && { rm -f "$XDG_CONFIG_HOME/mpd/mpd.conf" ; }

(
cat <<MPDDOTFILE
# This file is auto generated by config, do not edit locally

##       ________   ___       ___
##      /  _____/  /  /      /  /
##     /  /       /  /      /  /
##    /  /       /  /____  /  / _______  _______  ____  ____
##   /  /       /  ___  / /  / /  __  / /  ____/ /    \/    \
##  /  /_____  /  /  / / /  / /  /_/ / /  /     /  /\    /\  \
## /________/ /__/  /_/ /__/ /______/ /__/     /__/  \__/  \__\ TM
##
## Title: MPD Configuration File
## Author: Cody Opel
## E-mail: codyopel(at)gmail.com
## Copyright (c) 2014 All Rights Reserved, http://www.chlorm.net
## License: The MIT License - http://opensource.org/licenses/MIT
## Assumed Directory & File Structure:
##   $XDG_CONFIG_HOME/mpd/ ----------- MPD directory
##   $XDG_CONFIG_HOME/mpd/playlists/ - MPD playlists directory
##   $XDG_CONFIG_HOME/mpd/mpd.conf --- MPD config file
##   $XDG_CONFIG_HOME/mpd/database --- MPD database file
##   $XDG_CONFIG_HOME/mpd/log -------- MPD log file
##   $XDG_CONFIG_HOME/mpd/pid -------- MPD pid file
##   $XDG_CONFIG_HOME/mpd/state ------ MPD state file
##   /tmp/mpd.fifo ------------------- MPD FIFO output file

# Directories and files
filesystem_charset "UTF-8"
music_directory    "$XDG_MUSIC_DIR"
playlist_directory "$XDG_CONFIG_HOME/mpd/playlists"
db_file            "$XDG_CONFIG_HOME/mpd/database"
log_file           "$XDG_CONFIG_HOME/mpd/log"
pid_file           "$XDG_CONFIG_HOME/mpd/pid"
state_file         "$XDG_CONFIG_HOME/mpd/state"

# Network
#bind_to_address "localhost"
#port "6600"
#zeroconf_enabled "yes"
#zeroconf_name "MPD Music Player"

restore_paused "yes"
#metadata_to_use "artist,album,title,track,name,genre,date,composer,performer,disc"
#auto_update_depth "yes"
#auto_update_depth "3"

input {
    plugin "curl"
}

# Audio Outputs
audio_output {
    type           "alsa"
    name           "MPD ALSA Output"
    device         "hw:0,0"
    format         "44100:16:2"
    mixer_type     "hardware"
    mixer_device   "default"
    mixer_control  "PCM"
    mixer_index    "0"
}
audio_output {
    type           "fifo"
    name           "MPD FIFO Output"
    path           "/tmp/mpd.fifo"
    format         "192000:24:2"
}
audio_output {
    type           "pulse"
    name           "MPD Pulse Output"
}

MPDDOTFILE
) > "$XDG_CONFIG_HOME/mpd/mpd.conf" || return 1

  return 0

}

app_mpd_files () {

  file_exist "$XDG_CONFIG_HOME/mpd/database" || return 1
  file_exist "$XDG_CONFIG_HOME/mpd/pid" || return 1
  file_exist "$XDG_CONFIG_HOME/mpd/state" || return 1
  file_exist "$XDG_CONFIG_HOME/mpd/sticker.sql" || return 1
  file_exist "$XDG_CONFIG_HOME/mpd/log" || return 1

  return 0

}

app_mpd_cleanup () {

  rm -rf "$XDG_CONFIG_HOME/mpd"

}

app_mpd_configure () {

  app_mpd_installed || return 1

  app_mpd_dirs || return 1

  app_mpd_files || return 1

  app_mpd_dotfiles || return 1

  return 0

}

app_mpd () {

  app_mpd_configure || { app_mpd_cleanup ; return 1 ; }

  return 0

}
