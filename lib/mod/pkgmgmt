#!/usr/bin/env sh

##[updates the packages in the system's package manager]
pkg_update () {
  if os_base 'FreeBSD';then
    if path_hasbin portmaster;then
      sudo_wrap portsnap fetch || return $?
      sudo_wrap portsnap update || return $?
      sudo_wrap portmaster -ayBd
      return $?;fi
  elif os_base 'Linux';then
    ##[apt]
    if os_linux_distro '\(Debian\|Ubuntu\)';then
      if path_hasbin apt-get;then
        sudo_wrap apt-get update || return $?
        sudo_wrap apt-get dist-upgrade
        return $?;fi
    ##[pacman, etc...]
    elif os_linux_distro '\(Arch\|Antergos\)';then
      if path_hasbin aura;then
        sudo_wrap aura -Syu || return $?
        sudo_wrap aura -Aku
        return $?
      elif path_hasbin packer;then
        sudo_wrap packer -Syu
        return $?
      elif path_hasbin pacman;then
        sudo_wrap pacman -Syu
        return $?;fi
    ##[portage]
    elif os_linux_distro 'Gentoo';then
      if path_hasbin emerge;then
        sudo_wrap emerge --sync || return $?
        sudo_wrap emerge --keep-going --update --deep --with-bdeps=y --newuse @world
        return $?;fi
    ##[rpm]
    elif os_linux_distro '\(Redhat\|CentOS\|Fedora\)';then
      if path_hasbin yum;then
        sudo_wrap yum update
        return $?;fi
    ##[yast]
    elif os_linux_distro '\(Suse\|OpenSuse\)';then
      if path_hasbin zypper;then
        sudo_wrap zypper refresh || return $?
        sudo_wrap zypper update
        return $?;fi
    ##[unsupported distro]
    else
      echo "Failed to find an update procedure, unsupported linux distro"
      return 1;fi
  elif os_base 'Darwin';then
    echo "OSX not yet supported"
    ## homebrew
  else
    echo "Failed to find an update procedure, unsupported os"
    return 1;fi
}

##[installs the package through the system's package manager]
pkg_install () {
  if os_base 'FreeBSD';then
    if path_hasbin portmaster;then
      sudo_wrap portmaster -yBd $@
      return $?;fi
  elif os_base 'Linux';then
    ##[apt]
    if os_linux_distro '\(Debian\|Ubuntu\)';then
      if path_hasbin apt-get;then
        sudo_wrap apt-get install $@
        return $?;fi
    ##[pacman, etc...]
    elif os_linux_distro '\(Arch\|Antergos\)';then
      if path_hasbin aura; then
        if sudo_wrap aura -Si $@ >/dev/null 2>&1; then
          sudo_wrap aura -S $@ && return 0
        else
          sudo_wrap aura -A $@ && return 0;fi
        return 1
      elif path_hasbin packer; then
        sudo_wrap packer -S $@
        return $?
      elif path_hasbin pacman; then
        sudo_wrap pacman -S $@
        return $?;fi
    ##[portage]
    elif os_linux_distro 'Gentoo';then
      if path_hasbin emerge;then
        sudo_wrap emerge --with-bdeps=y $@
        return $?;fi
    ##[rpm]
    elif os_linux_distro '\(Redhat\|CentOS\|Fedora\)';then
      if path_hasbin yum;then
        sudo_wrap yum install $@
        return $?;fi
    ##[yast]
    elif os_linux_distro '\(Suse\|OpenSuse\)';then
      if path_hasbin zypper;then
        #sudo_wrap zypper
        return $?;fi
    ##[unsupported distro]
    else
      echo "Failed to find an install procedure, unsupported linux distro"
      return 1;fi
  elif os_base 'Darwin';then
    echo "OSX not yet supported"
    ## homebrew
  else
  echo "Failed to find an install procedure, unsupported os" >&2;fi
  return 1
}

##[removes and purges the package in the system's package manager]
pkg_remove () {
  if os_base 'FreeBSD';then
    if path_hasbin portmaster;then
      sudo_wrap portmaster -esdy $@
      return $?;fi
  elif os_base 'Linux';then
    ##[apt]
    if os_linux_distro '\(debian\|ubuntu\)';then
      if path_hasbin apt-get; then
        sudo_wrap apt-get purge $@
        return $?;fi
    ##[pacman, etc...]
    elif os_linux_distro '\(arch\|antergos\)';then
      if path_hasbin aura; then
        sudo_wrap aura -Rsdc $@
        return $?
      elif path_hasbin pacman; then
        sudo_wrap pacman -Rsdc $@
        return $?;fi
    ##[portage]
    elif os_linux_distro 'gentoo';then
      if path_hasbin emerge;then
        sudo_wrap emerge --unmerge $@
        ##[remove orphaned dependencies]
        sudo_wrap emerge --depclean
        return $?;fi
    ##[rpm]
    elif os_linux_distro '\(redhat\|centos\|fedora\)';then
      if path_hasbin yum;then
        #sudo_wrap yum install $@
        return $?;fi
    ##[yast]
    elif os_linux_distro '\(suse\|opensuse\)';then
      if path_hasbin zypper;then
        #sudo_wrap zypper
        return $?;fi
    ##[unsupported distro]
    else
      echo "Failed to find a remove procedure, unsupported linux distro"
      return 1;fi
  elif os_base 'Darwin';then
    echo "OSX not yet supported"
    ## homebrew
  else
  echo "Failed to find a remove procedure, unsupported os" >&2
  return 1
}
alias pkg_delete=pkg_remove

##[cleans the package repository]
pkg_clean () {
  if os_linux_distro 'arch' && path_hasbin pacman;then
    [ "$(pacman -Qqdt)" != "" ] && sudo_wrap pacman -Rns $(pacman -Qqdt)
    return $?
  elif os_linux_distro 'gentoo' && path_hasbin emerge;then
    sudo_wrap emerge --depclean && sudo_wrap emerge @preserved-rebuild
    return $?;fi
  echo "Failed to find a cleanup procedure" >&2
  return 1
}