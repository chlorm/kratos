#!/usr/bin/env sh

gentoo_prefix_bootstrap_zlib() {
	# use 1.2.5 by default, current bootstrap guides
	PV="$(gentoo_prefix_bootstrap_zlib zlib)"
	A=zlib-${PV}.tar.gz

	einfo "Bootstrapping ${A%-*}"

	if ! efetch ${GENTOO_MIRRORS}/distfiles/${A} ; then
		A=zlib-${PV}.tar.bz2
		efetch ${GENTOO_MIRRORS}/distfiles/${A} || return 1
	fi

	einfo "Unpacking ${A%%-*}"
	export S="${PORTAGE_TMPDIR}/zlib-${PV}"
	rm -rf "${S}"
	mkdir -p "${S}"
	cd "${S}"
	if [[ ${A} == *.tar.gz ]] ; then
		gzip -dc "${DISTDIR}"/${A} | $TAR -xf - || return 1
	else
		bzip2 -dc "${DISTDIR}"/${A} | $TAR -xf - || return 1
	fi
	S="${S}"/zlib-${PV}
	cd "${S}"

	if [[ ${CHOST} == x86_64-*-* || ${CHOST} == sparcv9-*-* ]] ; then
		# 64-bits targets need zlib as library (not just to unpack),
		# hence we need to make sure that we really bootstrap this
		# 64-bits (in contrast to the tools which we don't care if they
		# are 32-bits)
		export CC="gcc -m64"
	elif [[ ${CHOST} == i?86-*-* ]] ; then
		# This is important for bootstraps which are 64-native, but we
		# want 32-bits, such as most Linuxes, and more recent OSX.
		# OS X Lion and up default to a 64-bits userland, so force the
		# compiler to 32-bits code generation if requested here
		export CC="gcc -m32"
	fi
	# 1.2.5 suffers from a concurrency problem
	[[ ${PV} == 1.2.5 ]] && MAKEOPTS=

	einfo "Compiling ${A%-*}"
	CHOST= ${CONFIG_SHELL} ./configure --prefix="${ROOT}"/tmp/usr || return 1
	$MAKE ${MAKEOPTS} || return 1

	einfo "Installing ${A%-*}"
	$MAKE install || return 1

	# this lib causes issues when emerging python again on Solaris
	# because the tmp lib path is in the library search path there
	rm -Rf "${ROOT}"/tmp/usr/lib/libz*.a

	if [[ ${CHOST} == *-aix* ]]; then
		# No aix-soname support, but symlinks when built with gcc. This breaks
		# later on when aix-soname is added within Prefix, where the lib.so.1
		# is an archive then, while finding this one first due to possible
		# rpath ordering issues.
		rm -f "${ROOT}"/tmp/usr/lib/libz.so.1
	fi

	einfo "${A%-*} bootstrapped"
}

bootstrap_zlib() {
	bootstrap_zlib_core 1.2.8 || bootstrap_zlib_core 1.2.7 || \
	bootstrap_zlib_core 1.2.6 || bootstrap_zlib_core 1.2.5
}