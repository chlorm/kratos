#!/usr/bin/env zsh

# This file is part of Kratos.
# Copyright (c) 2014-2016, Cody Opel <codyopel@gmail.com>.
#
# Use of this source code is governed by the terms of the
# BSD-3 license.  A copy of the license can be found in
# the `LICENSE' file in the top level source directory.

[[ -o interactive ]] || return

# FIXME: move somewhere else
alias ebuild='nocorrect ebuild'
alias gist='nocorrect gist'
alias heroku='nocorrect heroku'
alias hpodder='nocorrect hpodder'
alias man='nocorrect man'
alias mkdir='nocorrect mkdir'
alias mv='nocorrect mv'
alias mysql='nocorrect mysql'
alias sudo='nocorrect sudo'

# Initalize shell configuration
export KRATOS_DIR="${HOME}/.kratos"
export DOTFILES_DIR="${HOME}/.dotfiles"

if [[ -z ${KRATOS_SHELL_INIT+x} ]] ; then
  source "${KRATOS_DIR}/lib/core.zsh"
  source "${KRATOS_DIR}/lib/DEFAULTS.zsh"
  [[ -f "${HOME}/.local/share/kratos/preferences" ]] && {
    source "${HOME}/.local/share/kratos/preferences"
  }
  [[ -f "${HOME}/.local/share/kratos/is-installed" ]] && {
    source "${HOME}/.local/share/kratos/is-installed"
  }
  [[ -f "${HOME}/.config/kratos/config" ]] && {
    source "${HOME}/.config/kratos/config"
  }
  [[ -f "${HOME}/.cache/kratos/cache-rc" ]] && {
    source "${HOME}/.cache/kratos/cache-rc"
  }
fi

if [[ "$(KRATOS::Lib:shell)" != 'zsh' ]] && type zsh > /dev/null ; then
  exec zsh --interactive
  exit $?
fi

if [[ -z ${KRATOS_SHELL_INIT+x} ]] ; then
  KRATOS::Lib:load.all 'main'
  # This is a bit of a hacky lock file implementation, but
  # guarantees that it is portable.
  if [[ ! -f "${HOME}/.cache/kratos/KRATOS_START" ]] ; then
    KRATOS::Lib:load.all 'start'
    if [[ -d "${HOME}/.cache" ]] ; then
      KRATOS::Lib:ensure.dir_exists "${HOME}/.cache/kratos"
      touch "${HOME}/.cache/kratos/KRATOS_START"
    fi
  fi
  [[ ${KRATOS_IS_LOGIN_SHELL} ]] && KRATOS::Lib:load.all 'login'
  [[ -o interactive ]] && KRATOS::Lib:load.all 'interactive'

  KRATOS::Lib:path.add "${HOME}/.bin"

  if [[ ! -f "${HOME}/.cache/kratos/cache-rc" ]] ; then
    KRATOS_CURRENT_KERNEL="$(KRATOS::Lib:os.kernel)"
    KRATOS_CURRENT_LINUX="$(KRATOS::Lib:os.linux)"
    KRATOS_CURRENT_SHELL="$(KRATOS::Lib:shell)"
  fi

  # Cache rc startup calls to prevent unnecessary forking
  if [[ -d "${HOME}/.cache/kratos" && \
        ! -f "${HOME}/.cache/kratos/cache-rc" ]] ; then
    KRATOS::Lib:ensure.file_exists "${HOME}/.cache/kratos/cache-rc"
    echo "KRATOS_CURRENT_KERNEL='$(KRATOS::Lib:os.kernel)'" > \
      "${HOME}/.cache/kratos/cache-rc"
    echo "KRATOS_CURRENT_LINUX='$(KRATOS::Lib:os.linux)'" > \
      "${HOME}/.cache/kratos/cache-rc"
    echo "KRATOS_CURRENT_SHELL='$(KRATOS::Lib:shell)'" > \
      "${HOME}/.cache/kratos/cache-rc"
  fi

  KRATOS_SHELL_INIT=true
fi

# Load the local config
if [[ -f "${HOME}/.zshrc.local" ]] ; then
  source "${HOME}/.zshrc.local"
fi
